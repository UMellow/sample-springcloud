eureka:
    server:
      # 开发环境下可关掉自我保护
      enableSelfPreservation: true
      #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
      #默认30s ( 客户端的有效负载缓存应该更新的时间间隔)
      responseCacheUpdateIntervalMs: 5
      #当注册表信息被改变时，则其被保存在缓存中不失效的时间，默认为180秒
      responseCacheAutoExpirationInSeconds: 5
      #启用主动失效，并且每次主动失效检测间隔为3s
      #默认60s
      eviction-interval-timer-in-ms: 3000
    client:
      #是否注册自己
      register-with-eureka: true
      #eureka client刷新本地缓存时间 从Eureka服务端获取注册信息的间隔时间，单位为秒 默认30
      registryFetchIntervalSeconds: 5
      #复制实例变化信息到eureka服务器所需要的时间间隔（s），默认为30秒
      instanceInfoReplicationIntervalSeconds: 5
      #最初复制实例信息到eureka服务器所需的时间（s），默认为40秒
      initialInstanceInfoReplicationIntervalSeconds: 10
    instance:
      preferIpAddress: true
      instance-id: ${spring.cloud.client.ip-address}:${server.port}
      hostname: ${spring.application.name}
      appname: ${spring.application.name}
      health-check-url-path: /actuator/health

management:
  endpoint:
    health:
      enabled: true
      show-details: always
    shutdown:
          enabled: true
  #将httptrace监控模块暴露给web
  endpoints:
    web:
      exposure:
        include: "*"

spring:
  profiles:
    active: local