<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>sample.springcloud</groupId>
    <artifactId>sample-springcloud-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <packaging>pom</packaging>

    <properties>
        <spring.boot.version>2.0.2.RELEASE</spring.boot.version>
        <spring.cloud.version>Finchley.RELEASE</spring.cloud.version>

        <junit.version>4.13.1</junit.version>
        <fastjson.version>1.2.47</fastjson.version>
        <slf4j.version>1.7.25</slf4j.version>
    </properties>

    <!--
        dependencyManagement 只声明依赖，但并不引入；
        用于统一管理依赖包的版本，子项目添加依赖时不再指定版本
    -->
    <dependencyManagement>
        <dependencies>
            <!--
                spring boot 依赖管理，基于此，可不用继承默认的 spring-boot-starter-parent，
                但需要注意的是，如果使用该方式，spring-boot-maven-plugin 插件需要声明版本号
            -->
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>-->

            <!-- spring cloud 依赖管理，基于此处声明，子项目中可引入 spring-cloud-starter-* 依赖而不用指定版本 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- 子项目默认拥有此处声明的依赖 -->
    <dependencies>
        <!-- logger -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- basic -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>

        <!-- spring boot & cloud -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- java unit test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- 子项目默认拥有此处声明的插件 -->
    <build>
        <plugins>
            <!-- 打包时跳过测试，等同于命令行执行：mvn install -Dmaven.test.skip=true -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <modules>
        <module>sample-springcloud-eureka</module>
        <module>sample-springcloud-servicehi</module>
        <module>sample-sc-openfeign</module>
    </modules>

</project>